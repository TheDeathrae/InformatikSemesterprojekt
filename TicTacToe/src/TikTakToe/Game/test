package Game;

public class test {

    boolean zugMoeglich;
    int feld[] = new int[9];

    boolean feldFrei(int feld[], int zug) {
        if (feld[zug] == 0) {
            return true;
        }
        else {
            return false;
        }
    }

    boolean setzen(int spielerAmZug, int zug) {
        if (feldFrei(feld, zug)) {
            feld[zug] = spielerAmZug;
            return true;
        }
        return false;
    }

    boolean gewinnPruefen(int spielerAmZug) {
        for (int i = 0; i < 7; i += 3) { //horizontal gewonnen
            if (feld[i] == feld[i + 1] && feld[i + 1] == feld[i + 2] && feld[i] == spieler && spieler != 0) {
                return true;
            }
        }
        for (int i = 0; i < 4; i++) { //vertikal gewonnen
            if (feld[i] == feld[i + 3] && feld[i + 3] == feld[i + 6] && feld[i] == spieler && spieler != 0) {
                return true;
            }
        }
        if (feld[0] == feld[4] && feld[4] == feld[8] && feld[0] == spieler && spieler != 0) { //diagonal gewinnen
            return true;
        }
        if (feld[2] == feld[4] && feld[4] == feld[6] && feld[0] == spieler && spieler != 0) {
            return true;
        }L
        for (int i = 0; i < 7; i ++){
            if (i != 0){
                //patt
            }
        }
        return false;
    }
}